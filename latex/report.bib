@inproceedings{abramsky2006-algorithmic-game-semantics,
  title={Algorithmic {{Game Semantics}} and Its {{Applications}} : {{Final Report}}},
  shorttitle={Algorithmic {{Game Semantics}} and Its {{Applications}}},
  author={Abramsky, S. and Ong, C.},
  year={2006},
  urldate={2025-03-31},
  abstract={ion refinement has proved to be a highly eff ctive method to verify systems with very large state spaces. Since abstractions are conservative overapproximations, safety of any abstracted program implies the safety of the concrete program (though the converse is not true. In a SAS'05 paper [8], Ghica et al. have introduced a purely semantic approach to (data) abstraction refinement, based on game semantics, using a language called Abstracted Idealized Algol. The key feature of the language is the use of abstraction schemes at the level of data-types, which allows the writing of abstracted programs in a syntax similar to that of concrete programs. In fact, a concrete program is a particular abstracted program, in which all the abstractions are identities. A fully abstract game model for AIA is presented, and an abstraction refinement semi-algorithm based on concrete representations of strategies is proposed. Tool 1: Game semantics compiler forIA2+while To assess the practicability of the game-semantic approach to program verification, we have constructed a compiler that transforms an open procedural program into the finite-state machine representation of its fully abstract game semantics; very little user instrumentation of the source code is required. The tool was constructed in CAML; most of the back-end heavy duty finite-state machine processing was done using the AT+T FSM library. Ghica and Murawski's experiments (in TACAS'04 [2]) confirm what is a common situation in software model checking: even though the asymptotic complexity of the algorithm is high, the worst-case scenario only happens in pathological cases; many common and useful programs can in fact be verified. A number of case studies (bubble sort,},
  file={/home/cdo/Zotero/storage/E6TSQ37V/Abramsky and Ong - 2006 - Algorithmic Game Semantics and its Applications  Final Report.pdf}
}

@article{abramsky2002-geometry-interaction-linear,
  title={Geometry of interaction and linear combinatory algebras},
  author={Abramsky, Samson and Haghverdi, Esfandiar and Scott, Philip},
  journal={Mathematical Structures in Computer Science},
  volume={12},
  number={5},
  pages={625--665},
  year={2002},
  publisher={Cambridge University Press}
}

@article{blizard1990-negative-membership,
  title={Negative membership.},
  author={Blizard, Wayne D},
  journal={Notre Dame Journal of formal logic},
  volume={31},
  number={3},
  pages={346--368},
  year={1990},
  publisher={Duke University Press}
}

@article{abramsky2000-full-abstraction-pcf,
  title={Full Abstraction for {{PCF}}},
  author={Abramsky, Samson and Jagadeesan, Radha and Malacaria, Pasquale},
  year={2000},
  journal={Inf. Comput.},
  volume={163},
  number={2},
  pages={409--470}
}

@inproceedings{abramsky1997-game-semantics-programming,
  title={Game Semantics for Programming Languages},
  booktitle={22nd {{International Symposium}} on {{Mathematical Foundations}} of {{Computer Science}} ({{MFCS}} 1997)},
  author={Abramsky, Samson},
  year={1997-08-25/1997-08-29},
  pages={3--4},
  address={Bratislava, Slovakia}
}

@incollection{abramsky1990-lazy-lambda-calculus,
  title={The Lazy Lambda-Calculus},
  author={Abramsky, Samson},
  year={1990},
  pages={65--117},
  publisher={Addison Wesley}
}

@inproceedings{accattoli2014-distilling-abstract-machines,
  title={Distilling Abstract Machines},
  booktitle={19th {{ACM SIGPLAN International Conference}} on {{Functional Programming}}, {{ICFP}} 2014},
  author={Accattoli, Beniamino and Barenbaum, Pablo and Mazza, Damiano},
  year={2014-09-01/2014-09-03},
  pages={363--376},
  address={Gothenburg, Sweden}
}

@article{accattoli2021-efficiency-interaction,
  title={The (in)Efficiency of Interaction},
  author={Accattoli, Beniamino and Dal Lago, Ugo and Vanoni, Gabriele},
  year={2021},
  journal={Proc. ACM Program. Lang.},
  volume={5},
  number={POPL},
  pages={1--33}
}

@inproceedings{accattoli2009-jumping-boxes,
  title={Jumping Boxes},
  booktitle={{{CSL}} 2009, Volume 5771 of {{Lect}}. {{Notes Comp}}. {{Sci}}.},
  author={Accattoli, Beniamino and Guerrini, Stefano},
  year={2009},
  pages={55--70},
  publisher={Springer}
}

@inproceedings{accattoli2020-machinery-interaction,
  title={The Machinery of Interaction},
  booktitle={{{PPDP}} 2020},
  author={Accattoli, Beniamino and Dal Lago, Ugo and Vanoni, Gabriele},
  year={2020},
  pages={4:1-4:15},
  publisher={ACM}
}

@article{alvarez-picallo2021-functorial-string-diagrams,
  title={Functorial String Diagrams for Reverse-Mode Automatic Differentiation},
  author={{Alvarez-Picallo}, Mario and Ghica, Dan R. and Sprunger, David and Zanasi, Fabio},
  year={2021},
  journal={CoRR},
  volume={abs/2107.13433}
}

@inproceedings{alvarez-picallo2022-rewriting-monoidal-closed,
  title={Rewriting for Monoidal Closed Categories},
  booktitle={7th {{International Conference}} on {{Formal Structures}} for {{Computation}} and {{Deduction}}, {{FSCD}} 2022},
  author={{Alvarez-Picallo}, Mario and Ghica, Dan R. and Sprunger, David and Zanasi, Fabio},
  year={2022-08-02/2022-08-05},
  pages={29:1-29:20},
  publisher={Schloss Dagstuhl - Leibniz-Zentrum f{\"u}r Informatik},
  address={Haifa, Israel}
}

@article{bonchi2017-general-account-coinduction,
  title={A General Account of Coinduction Up-To},
  author={Bonchi, Filippo and Petrisan, Daniela and Pous, Damien and Rot, Jurriaan},
  year={2017},
  journal={Acta Inf.},
  volume={54},
  number={2},
  pages={127--190}
}

@article{bonchi2009-labelled-transitions-mobile,
  title={Labelled {{Transitions}} for {{Mobile Ambients}} ({{As Synthesized}} via a {{Graphical Encoding}})},
  author={Bonchi, Filippo and Gadducci, Fabio and Monreale, Giacoma Valentina},
  year={2009},
  month=jul,
  journal={Electronic Notes in Theoretical Computer Science},
  volume={242},
  number={1},
  pages={73--98},
  issn={15710661},
  doi={10.1016/j.entcs.2009.06.014},
  urldate={2025-04-01},
  copyright={https://www.elsevier.com/tdm/userlicense/1.0/},
  langid={english}
}

@article{bonchi2022-string-diagram-rewrite,
  title={String Diagram Rewrite Theory {{I}}: Rewriting with Frobenius Structure},
  author={Bonchi, Filippo and Gadducci, Fabio and Kissinger, Aleks and Sobocinski, Pawel and Zanasi, Fabio},
  year={2022},
  journal={J. ACM},
  volume={69},
  number={2},
  pages={14:1-14:58}
}

@article{bonchi2022-string-diagram-rewrite-2,
  title={String Diagram Rewrite Theory {{II}}: Rewriting with Symmetric Monoidal Structure},
  author={Bonchi, Filippo and Gadducci, Fabio and Kissinger, Aleks and Sobocinski, Pawel and Zanasi, Fabio},
  year={2022},
  journal={Math. Struct. Comput. Sci.},
  volume={32},
  number={4},
  pages={511--541}
}

@article{bonchi2022-string-diagram-rewrite-3,
  title={String Diagram Rewrite Theory {{III}}: Confluence with and without Frobenius},
  author={Bonchi, Filippo and Gadducci, Fabio and Kissinger, Aleks and Sobocinski, Pawel and Zanasi, Fabio},
  year={2022},
  journal={Math. Struct. Comput. Sci.},
  volume={32},
  number={7},
  pages={829--869}
}

@article{bonchi2009-synthesising-ccs-bisimulation,
  title={Synthesising {{CCS}} Bisimulation Using Graph Rewriting},
  author={Bonchi, Filippo and Gadducci, Fabio and K{\"o}nig, Barbara},
  year={2009},
  month=jan,
  journal={Information and Computation},
  volume={207},
  number={1},
  pages={14--40},
  issn={08905401},
  doi={10.1016/j.ic.2008.10.005},
  urldate={2025-04-01},
  copyright={https://www.elsevier.com/tdm/userlicense/1.0/},
  langid={english}
}

@article{bruguieres2011-hopf-monads-monoidal,
title={Hopf monads on monoidal categories},
journal={Advances in Mathematics},
volume={227},
number={2},
pages={745-800},
year={2011},
issn={0001-8708},
doi={https://doi.org/10.1016/j.aim.2011.02.008},
url={https://www.sciencedirect.com/science/article/pii/S0001870811000582},
author={Alain Bruguières and Steve Lack and Alexis Virelizier},
keywords={Monoidal categories, Hopf monads, Cross products, Hopf algebras, Hopf algebroids},
abstract={We define Hopf monads on an arbitrary monoidal category, extending the definition given in BruguiÃ¨res and Virelizier (2007) [5] for monoidal categories with duals. A Hopf monad is a bimonad (or opmonoidal monad) whose fusion operators are invertible. This definition can be formulated in terms of Hopf adjunctions, which are comonoidal adjunctions with an invertibility condition. On a monoidal category with internal Homs, a Hopf monad is a bimonad admitting a left and a right antipode. Hopf monads generalize Hopf algebras to the non-braided setting. They also generalize Hopf algebroids (which are linear Hopf monads on a category of bimodules admitting a right adjoint). We show that any finite tensor category is the category of finite-dimensional modules over a Hopf algebroid. Any Hopf algebra in the center of a monoidal category C gives rise to a Hopf monad on C. The Hopf monads so obtained are exactly the augmented Hopf monads. More generally if a Hopf monad T is a retract of a Hopf monad P, then P is a cross product of T by a Hopf algebra of the center of the category of T-modules (generalizing the Radfordâ€“Majid bosonization of Hopf algebras). We show that the comonoidal comonad of a Hopf adjunction is canonically represented by a cocommutative central coalgebra. As a corollary, we obtain an extension of SweedlerÊ¼s Hopf module decomposition theorem to Hopf monads (in fact to the weaker notion of pre-Hopf monad).}
}

@article{bruguieres2007-hopf-monads,
  title={Hopf Monads},
  author={Brugui{\`e}res, Alain and Virelizier, Alexis},
  year={2007},
  month=nov,
  journal={Advances in Mathematics},
  volume={215},
  number={2},
  pages={679--733},
  issn={0001-8708},
  doi={10.1016/j.aim.2007.04.011},
  urldate={2025-04-05},
  abstract={We introduce and study Hopf monads on autonomous categories (i.e., monoidal categories with duals). Hopf monads generalize Hopf algebras to a non-braided (and non-linear) setting. In particular, any monoidal adjunction between autonomous categories gives rise to a Hopf monad. We extend many fundamental results of the theory of Hopf algebras (such as the decomposition of Hopf modules, the existence of integrals, Maschke's criterium of semisimplicity, etc.) to Hopf monads. We also introduce and study quasitriangular and ribbon Hopf monads (again defined in a non-braided setting).},
  keywords={Hopf monads,Monoidal adjunctions},
  file={/home/cdo/Zotero/storage/YEAF7TD2/S0001870807001430.html}
}

@inproceedings{dallago2017-effectful-applicative-bisimilarity,
  title={Effectful Applicative Bisimilarity: {{Monads}}, Relators, and Howe's Method},
  booktitle={32nd {{Annual ACM}}/{{IEEE Symposium}} on {{Logic}} in {{Computer Science}} ({{LICS}} 2017)},
  author={Dal Lago, Ugo and Gavazzo, Francesco and Levy, Paul Blain},
  year={2017-06-20/2017-06-23},
  pages={1--12},
  publisher={IEEE Computer Society},
  address={Reykjavik, Iceland}
}

@inproceedings{dallago2017-geometry-concurrent-interaction,
  title={The Geometry of Concurrent Interaction: {{Handling}} Multiple Ports by Way of Multiple Tokens},
  booktitle={32nd {{Annual ACM}}/{{IEEE Symposium}} on {{Logic}} in {{Computer Science}} ({{LICS}} 2017)},
  author={Dal Lago, Ugo and Tanaka, Ryo and Yoshimizu, Akira},
  year={2017-06-20/2017-06-23},
  pages={1--12},
  publisher={IEEE Computer Society},
  address={Reykjavik, Iceland}
}

@article{danos1996-reversible-irreversible-optimal,
  title={Reversible, Irreversible and Optimal Lambda-Machines},
  author={Danos, Vincent and Regnier, Laurent},
  year={1996},
  journal={Elect. Notes in Theor. Comp. Sci.},
  volume={3},
  pages={40--60}
}

@article{danvy2012-inter-deriving-small-step-big-step,
  title={On Inter-Deriving Small-Step and Big-Step Semantics: {{A}} Case Study for Storeless Call-by-Need Evaluation},
  author={Danvy, Olivier and Millikin, Kevin and Munk, Johan and Zerny, Ian},
  year={2012},
  journal={Theor. Comput. Sci.},
  volume={435},
  pages={21--42}
}

@article{day1977-note-compact-closed,
  title={Note on {{Compact Closed Categories}}},
  author={Day, B. J.},
  year={1977},
  journal={Journal of the Australian Mathematical Society},
  volume={24},
  number={3},
  pages={309--311},
  issn={1446-7887},
  doi={10.1017/S1446788700020334},
  urldate={2025-04-05},
  abstract={Several categorical aspects of localisation to compact closed categories and free compact closed categories are discussed.},
  file={/home/cdo/Zotero/storage/NWFXTLEM/Day - 1977 - Note on Compact Closed Categories.pdf}
}

@article{desimone1985-higher-level-synchronising-devices,
  title={Higher-Level Synchronising Devices in {{Meije-SCCS}}},
  author={De Simone, Robert},
  year={1985},
  journal={Theoretical Computer Science},
  volume={37},
  pages={245--267},
  issn={03043975},
  doi={10.1016/0304-3975(85)90093-3},
  urldate={2025-04-01},
  copyright={https://www.elsevier.com/tdm/userlicense/1.0/},
  langid={english}
}

@inproceedings{dilavore2022-monoidal-streams-dataflow,
  title={Monoidal {{Streams}} for {{Dataflow Programming}}},
  booktitle={Proceedings of the 37th {{Annual ACM}}/{{IEEE Symposium}} on {{Logic}} in {{Computer Science}}},
  author={Di Lavore, Elena and De Felice, Giovanni and Rom{\'a}n, Mario},
  year={2022},
  month=aug,
  pages={1--14},
  publisher={ACM},
  address={Haifa Israel},
  doi={10.1145/3531130.3533365},
  urldate={2025-04-05},
  abstract={We introduce monoidal streams: a generalization of causal stream functions to monoidal categories. In the same way that streams provide semantics to dataflow programming with pure functions, monoidal streams provide semantics to dataflow programming with theories of processes represented by a symmetric monoidal category. At the same time, monoidal streams form a feedback monoidal category, which can be used to interpret signal flow graphs. As an example, we study a stochastic dataflow language.},
  isbn={978-1-4503-9351-5},
  langid={english},
  file={/home/cdo/Zotero/storage/RT5TK32P/Di Lavore et al. - 2022 - Monoidal Streams for Dataflow Programming.pdf}
}

@inproceedings{dilavore2022-monoidal-streams-dataflow-2,
  title={Monoidal {{Streams}} for {{Dataflow Programming}}},
  booktitle={Proceedings of the 37th {{Annual ACM}}/{{IEEE Symposium}} on {{Logic}} in {{Computer Science}}},
  author={Di Lavore, Elena and De Felice, Giovanni and Rom{\'a}n, Mario},
  year={2022},
  month=aug,
  pages={1--14},
  publisher={ACM},
  address={Haifa Israel},
  doi={10.1145/3531130.3533365},
  urldate={2025-04-06},
  isbn={978-1-4503-9351-5},
  langid={english},
  file={/home/cdo/Zotero/storage/JWHRVXMG/Di Lavore et al. - 2022 - Monoidal Streams for Dataflow Programming.pdf}
}

@article{dorman2012-structured-operational-semantics,
  title={Structured {{Operational Semantics}} for {{Graph Rewriting}}},
  author={Dorman, Andrei and Heindel, Tobias and Konig, Barbara},
  year={2012},
  month=may,
  journal={Scientific Annals of Computer Science},
  volume={22},
  number={1},
  pages={105--145},
  issn={18438121, 22482695},
  doi={10.7561/SACS.2012.1.105},
  urldate={2025-04-01},
  file={/home/cdo/Zotero/storage/EWISCEJ6/Dorman et al. - 2012 - Structured Operational Semantics for Graph Rewriting.pdf}
}

@article{drewes2002-hierarchical-graph-transformation,
  title={Hierarchical Graph Transformation},
  author={Drewes, Frank and Hoffmann, Berthold and Plump, Detlef},
  year={2002},
  journal={J. Comput. Syst. Sci.},
  volume={64},
  number={2},
  pages={249--283}
}

@article{dreyer2012-impact-higher-order-state,
  title={The Impact of Higher-Order State and Control Effects on Local Relational Reasoning},
  author={Dreyer, Derek and Neis, Georg and Birkedal, Lars},
  year={2012},
  journal={J. Funct. Program.},
  volume={22},
  number={4-5},
  pages={477--528}
}

@inproceedings{dreyer2010-relational-modal-logic,
  title={A Relational Modal Logic for Higher-Order Stateful Adts},
  booktitle={Proceedings of the 37th {{Annual ACM SIGPLAN-SIGACT Symposium}} on {{Principles}} of {{Programming Languages}}, {{POPL}} '10},
  author={Dreyer, Derek and Neis, Georg and Rossberg, Andreas and Birkedal, Lars},
  year={2010},
  pages={185--198},
  publisher={ACM},
  address={New York, NY, USA}
}

@article{ehrig2006-deriving-bisimulation-congruences,
  title={Deriving Bisimulation Congruences in the {{DPO}} Approach to Graph Rewriting with Borrowed Contexts},
  author={Ehrig, Hartmut and K{\"o}nig, Barbara},
  year={2006},
  month=dec,
  journal={Mathematical Structures in Computer Science},
  volume={16},
  number={6},
  pages={1133--1163},
  issn={0960-1295, 1469-8072},
  doi={10.1017/S096012950600569X},
  urldate={2025-04-01},
  copyright={https://www.cambridge.org/core/terms},
  langid={english}
}

@inproceedings{fiore1999-abstract-syntax-variable,
  title={Abstract Syntax and Variable Binding},
  booktitle={Proceedings. 14th {{Symposium}} on {{Logic}} in {{Computer Science}} ({{Cat}}. {{No}}. {{PR00158}})},
  author={Fiore, M. and Plotkin, G. and Turi, D.},
  year={1999},
  month=jul,
  pages={193--202},
  issn={1043-6871},
  doi={10.1109/LICS.1999.782615},
  urldate={2025-04-01},
  abstract={We develop a theory of abstract syntax with variable binding. To every binding signature we associate a category of models consisting of variable sets endowed with compatible algebra and substitution structures. The syntax generated by the signature is the initial model. This gives a notion of initial algebra semantics encompassing the traditional one; besides compositionality, it automatically verifies the semantic substitution lemma.},
  keywords={Algebra,Carbon capture and storage,Computer languages,Concrete,Integral equations,Logic,Production,Proposals,Tree graphs},
  file={/home/cdo/Zotero/storage/WGSDCWNM/782615.html}
}

@article{gabbay2002-new-approach-abstract,
  title={A {{New Approach}} to {{Abstract Syntax}} with {{Variable Binding}}},
  author={Gabbay, Murdoch J. and Pitts, Andrew M.},
  year={2002},
  month=jul,
  journal={Form. Asp. Comput.},
  volume={13},
  number={3-5},
  pages={341--363},
  issn={0934-5043},
  doi={10.1007/s001650200016},
  urldate={2025-04-01},
  abstract={The permutation model of set theory with atoms (FM-sets), devised by Fraenkel and Mostowski in the 1930s, supports notions of `name-abstraction' and `fresh name' that provide a new way to represent, compute with, and reason about the syntax of formal systems involving variable-binding operations. Inductively defined FM-sets involving the name-abstraction set former (together with Cartesian product and disjoint union) can correctly encode syntax modulo renaming of bound variables. In this way, the standard theory of algebraic data types can be extended to encompass signatures involving binding operators. In particular, there is an associated notion of structural recursion for defining syntax-manipulating functions (such as capture avoiding substitution, set of free variables, etc.) and a notion of proof by structural induction, both of which remain pleasingly close to informal practice in computer science.},
  file={/home/cdo/Zotero/storage/JKJV6WP9/Gabbay and Pitts - 2002 - A New Approach to Abstract Syntax with Variable Binding.pdf}
}

@article{gadducci2007-graph-rewriting-calculus,
  title={Graph Rewriting for the {$\pi$}-Calculus},
  author={Gadducci, Fabio},
  year={2007},
  month=jun,
  journal={Mathematical Structures in Computer Science},
  volume={17},
  number={3},
  pages={407--437},
  issn={0960-1295, 1469-8072},
  doi={10.1017/S096012950700610X},
  urldate={2025-04-01},
  abstract={We propose a graphical implementation for (possibly recursive) processes of the {$\pi$}-calculus, encoding each process into a graph. Our implementation is sound and complete with respect to the structural congruence for the calculus: two processes are equivalent if and only if they are mapped into graphs with the same normal form. Most importantly, the encoding allows the use of standard graph rewriting mechanisms for modelling the reduction semantics of the calculus.},
  copyright={https://www.cambridge.org/core/terms},
  langid={english}
}

@article{geuvers2013-bruijn-contribution-formalization,
  title={N.{{G}}.~de {{Bruijn}}'s Contribution to the Formalization of Mathematics},
  author={Geuvers, Herman and Nederpelt, Rob},
  year={2013},
  month=nov,
  journal={Indagationes Mathematicae},
  series={In Memory of {{N}}.{{G}}. ({{Dick}}) de {{Bruijn}} (1918--2012)},
  volume={24},
  number={4},
  pages={1034--1049},
  issn={0019-3577},
  doi={10.1016/j.indag.2013.09.003},
  urldate={2025-04-01},
  abstract={N.G.~(Dick) de Bruijn was the first to develop a formal language suitable for the complete expression of a mathematical subject matter. His formalization does not only regard the usual mathematical expressions, but also all sorts of meta-notions such as definitions, substitutions, theorems and even complete proofs. He envisaged (and demonstrated) that a full formalization enables one to check proofs automatically by means of a computer program. He started developing his ideas about a suitable formal language for mathematics in the end of the 1960s, when computers were still in their infancy. De Bruijn was ahead of his time and much of his work only became known to a wider audience much later. In the present paper we highlight de Bruijn's contributions to the formalization of mathematics, directed towards verification by a computer, by placing these in their time and by relating them to parallel and later developments. We aim to explain some of the more technical aspects of de Bruijn's work to a wider audience of interested mathematicians and computer scientists.},
  keywords={Formalizing mathematics,Lambda calculus,Proof assistants,Type theory},
  file={/home/cdo/Zotero/storage/U3M6SGAP/S0019357713000700.html}
}

@incollection{ghica2023-far-side-cube,
  title={The Far Side of the Cube},
  booktitle={Samson {{Abramsky}} on {{Logic}} and {{Structure}} in {{Computer Science}} and {{Beyond}}},
  author={Ghica, Dan R.},
  editor={Palmigiano, Alessandra and Sadrzadeh, Mehrnoosh},
  year={2023},
  pages={219--250},
  publisher={Springer Verlag}
}

@article{ghica2023-string-diagrams-lambda,
  title={String Diagrams for {$\lambda$}-Calculi and Functional Computation},
  author={Ghica, Dan and Zanasi, Fabio},
  year={2023},
  journal={arXiv preprint},
  volume={arXiv:2305.18945}
}

@article{ghica2012-system-level-game-semantics,
  title={A System-Level Game Semantics},
  author={Ghica, Dan R. and Tzevelekos, Nikos},
  year={2012},
  journal={Electr. Notes Theor. Comput. Sci.},
  volume={286},
  pages={191--211}
}

@incollection{girard1989-geometry-interaction-interpretation,
  title={Geometry of {{Interaction I}}: Interpretation of System {{F}}},
  booktitle={Logic {{Colloquium}} 1988, Volume 127 of {{Studies}} in {{Logic}} \& {{Found}}. {{Math}}.},
  author={Girard, Jean-Yves},
  year={1989},
  pages={221--260},
  publisher={Elsevier}
}

@article{bartha2017-completeness-traced-monoidal,
  title={On the completeness of the traced monoidal category axioms in (Rel,+)},
  author={Bartha, Mikl{\'o}s},
  journal={Acta Cybernetica},
  volume={23},
  number={1},
  pages={327--347},
  year={2017},
  publisher={University of Szeged}
}

@article{girard1987-linear-logic,
  title={Linear Logic},
  author={Girard, Jean-Yves},
  year={1987},
  journal={Theor. Comput. Sci.},
  volume={50},
  pages={1--102}
}

@phdthesis{green2010-towards-formally-verified,
  title={Towards a Formally Verified Functional Quantum Programming Language},
  author={Green, Alexander S.},
  year={2010},
  urldate={2025-04-06},
  school={University of Nottingham},
  file={/home/cdo/Zotero/storage/885VTF2A/Green - 2010 - Towards a formally verified functional quantum programming language.pdf}
}

@article{groote1992-structured-operational-semantics,
  title={Structured Operational Semantics and Bisimulation as a Congruence},
  author={Groote, Jan Friso and Vaandrager, Frits},
  year={1992},
  month=oct,
  journal={Information and Computation},
  volume={100},
  number={2},
  pages={202--260},
  issn={08905401},
  doi={10.1016/0890-5401(92)90013-6},
  urldate={2025-04-01},
  copyright={https://www.elsevier.com/tdm/userlicense/1.0/},
  langid={english},
  file={/home/cdo/Zotero/storage/L2W7SARD/Groote and Vaandrager - 1992 - Structured operational semantics and bisimulation as a congruence.pdf}
}

@book{grothendieck1971-rev-tements-etales,
  title={{Rev{\^e}tements Etales et Groupe Fondamental}},
  author={Grothendieck, Alexander and Raynaud, Mich{\`e}le},
  year={1971},
  series={{Lecture Notes in Mathematics}},
  volume={224},
  publisher={Springer},
  address={Berlin, Heidelberg},
  doi={10.1007/BFb0058656},
  urldate={2025-04-05},
  copyright={http://www.springer.com/tdm},
  isbn={978-3-540-05614-0 978-3-540-36910-3},
  langid={french},
  keywords={Geometrie}
}

@article{gurevich2018-evolving-algebras-1993,
  title={Evolving Algebras 1993: {{Lipari}} Guide},
  author={Gurevich, Yuri},
  year={2018},
  journal={arXiv preprint},
  volume={arXiv:1808.06255}
}

@incollection{hasegawa1997-recursion-cyclic-sharing,
  title={Recursion from Cyclic Sharing: {{Traced}} Monoidal Categories and Models of Cyclic Lambda Calculi},
  shorttitle={Recursion from Cyclic Sharing},
  booktitle={Typed {{Lambda Calculi}} and {{Applications}}},
  author={Hasegawa, Masahito},
  editor={Goos, Gerhard and Hartmanis, Juris and Leeuwen, Jan and Groote, Philippe and Roger Hindley, J.},
  year={1997},
  volume={1210},
  pages={196--213},
  publisher={Springer Berlin Heidelberg},
  address={Berlin, Heidelberg},
  doi={10.1007/3-540-62688-3_37},
  urldate={2025-04-05},
  isbn={978-3-540-62688-6 978-3-540-68438-1},
  file={/home/cdo/Zotero/storage/AMW5X5K9/Hasegawa - 1997 - Recursion from cyclic sharing Traced monoidal categories and models of cyclic lambda calculi.pdf}
}

@article{eilenberg1965-adjoint-functors-triples,
  title={Adjoint functors and triples},
  author={Eilenberg, Samuel and Moore, John C},
  journal={Illinois Journal of Mathematics},
  volume={9},
  number={3},
  pages={381--398},
  year={1965},
  publisher={Duke University Press}
}

@inproceedings{hasegawa2024-braids-twists-trace,
  title={Braids, twists, trace and duality in combinatory algebras},
  author={Hasegawa, Masahito and Lechenne, Serge},
  booktitle={Proceedings of the 39th Annual ACM/IEEE Symposium on Logic in Computer Science},
  pages={1--14},
  year={2024}
}

@article{joyal1991-geometry-tensor-calculus,
  title={The geometry of tensor calculus, I},
  author={Joyal, Andr{\'e} and Street, Ross},
  journal={Advances in mathematics},
  volume={88},
  number={1},
  pages={55--112},
  year={1991},
  publisher={Academic Press}
}

@incollection{girard1989-geometry-interaction-interpretation-2,
  title={Geometry of interaction 1: Interpretation of System F},
  author={Girard, Jean-Yves},
  booktitle={Studies in Logic and the Foundations of Mathematics},
  volume={127},
  pages={221--260},
  year={1989},
  publisher={Elsevier}
}

@article{hasegawa2023-traced-monads-hopf,
  title={Traced {{Monads}} and {{Hopf Monads}}},
  author={Hasegawa, Masahito and Lemay, Jean-Simon Pacaud},
  year={2023},
  month=oct,
  journal={Compositionality},
  volume={5},
  eprint={2208.06529},
  primaryclass={math},
  pages={10},
  issn={2631-4444},
  doi={10.32408/compositionality-5-10},
  urldate={2025-04-05},
  abstract={A traced monad is a monad on a traced symmetric monoidal category that lifts the traced symmetric monoidal structure to its Eilenberg-Moore category. A long-standing question has been to provide a characterization of traced monads without explicitly mentioning the Eilenberg-Moore category. On the other hand, a symmetric Hopf monad is a symmetric bimonad whose fusion operators are invertible. For compact closed categories, symmetric Hopf monads are precisely the kind of monads that lift the compact closed structure to their Eilenberg-Moore categories. Since compact closed categories and traced symmetric monoidal categories are closely related, it is a natural question to ask what is the relationship between Hopf monads and traced monads. In this paper, we introduce trace-coherent Hopf monads on traced monoidal categories, which can be characterized without mentioning the Eilenberg-Moore category. The main theorem of this paper is that a symmetric Hopf monad is a traced monad if and only if it is a trace-coherent Hopf monad. We provide many examples of trace-coherent Hopf monads, such as those induced by cocommutative Hopf algebras or any symmetric Hopf monad on a compact closed category. We also explain how for traced Cartesian monoidal categories, trace-coherent Hopf monads can be expressed using the Conway operator, while for traced coCartesian monoidal categories, any trace-coherent Hopf monad is an idempotent monad. We also provide separating examples of traced monads that are not Hopf monads, as well as symmetric Hopf monads that are not trace-coherent.},
  archiveprefix={arXiv},
  keywords={Mathematics - Category Theory},
  file={/home/cdo/Zotero/storage/RK2HLAYE/Hasegawa and Lemay - 2023 - Traced Monads and Hopf Monads.pdf;/home/cdo/Zotero/storage/2KUFMFGI/2208.html}
}


@article{sharma2018-symmetric-monoidal-categories,
  title={Symmetric monoidal categories and $$\backslash$Gamma $-categories},
  author={Sharma, Amit},
  journal={arXiv preprint arXiv:1811.11333},
  year={2018}
}

@article{hasegawa2009-traced-monoidal-closed,
  title={On Traced Monoidal Closed Categories},
  author={Hasegawa, Masahito},
  year={2009},
  month=apr,
  journal={Mathematical Structures in Computer Science},
  volume={19},
  number={2},
  pages={217--244},
  issn={0960-1295, 1469-8072},
  doi={10.1017/S0960129508007184},
  urldate={2025-04-05},
  abstract={The structure theorem of Joyal, Street and Verity says that every traced monoidal category                                                              arises as a monoidal full subcategory of the tortile monoidal category               Int                                                              . In this paper we focus on a simple observation that a traced monoidal category                                                              is               closed               if and only if the canonical inclusion from                                                              into               Int                                                              has a right adjoint. Thus, every traced monoidal closed category arises as a monoidal co-reflexive full subcategory of a tortile monoidal category. From this, we derive a series of facts for traced models of linear logic, and some for models of fixed-point computation. To make the paper more self-contained, we also include various background results for traced monoidal categories.},
  copyright={https://www.cambridge.org/core/terms},
  langid={english},
  file={/home/cdo/Zotero/storage/WRFA88MZ/Hasegawa - 2009 - On traced monoidal closed categories.pdf}
}

@article{hasegawa2003-uniformity-principle-traced,
  title={The {{Uniformity Principle}} on {{Traced Monoidal Categories}}},
  author={Hasegawa, Masahito},
  year={2003},
  month=feb,
  journal={Electronic Notes in Theoretical Computer Science},
  series={{{CTCS}}'02, {{Category Theory}} and {{Computer Science}}},
  volume={69},
  pages={137--155},
  issn={1571-0661},
  doi={10.1016/S1571-0661(04)80563-2},
  urldate={2025-04-05},
  abstract={The uniformity principle for traced monoidal categories has been introduced as a natural generalization of the uniformity principle (Plotkin's principle) for fixpoint operators in domain theory. We show that this notion can be used for constructing new traced monoidal categories from known ones. Some classical examples like the Scott induction principle are shown to be instances of these constructions. We also characterize some specific cases of our constructions as suitable enriched limits.},
  file={/home/cdo/Zotero/storage/23WXLYRH/S1571066104805632.html}
}

@article{heunen0000-advanced-topics-category,
  title={Advanced {{Topics}} in {{Category Theory}}, {{Part I}}},
  author={Heunen, Notes Chris and Vicary, Jamie},
  langid={english},
  file={/home/cdo/Zotero/storage/IIMDKQY7/Heunen and Vicary - Advanced Topics in Category Theory, Part I.pdf}
}

@article{hirsch2004-shaped-hierarchical-architectural,
  title={Shaped {{Hierarchical Architectural Design}}},
  author={Hirsch, Dan and Montanari, Ugo},
  year={2004},
  month=dec,
  journal={Electronic Notes in Theoretical Computer Science},
  volume={109},
  pages={97--109},
  issn={15710661},
  doi={10.1016/j.entcs.2004.02.059},
  urldate={2025-04-01},
  copyright={https://www.elsevier.com/tdm/userlicense/1.0/},
  langid={english},
  file={/home/cdo/Zotero/storage/F9DXEX82/Hirsch and Montanari - 2004 - Shaped Hierarchical Architectural Design.pdf}
}

@inproceedings{hoshino2014-memoryful-geometry-interaction,
  title={Memoryful Geometry of Interaction: From Coalgebraic Components to Algebraic Effects},
  booktitle={Joint {{Meeting}} of the 23rd {{EACSL Annual Conference}} on {{Computer Science Logic}} ({{CSL}}) and the 29th {{Annual ACM}}/{{IEEE Symposium}} on {{Logic}} in {{Computer Science}} ({{LICS}}), {{CSL-LICS}} 2014},
  author={Hoshino, Naohiko and Muroya, Koko and Hasuo, Ichiro},
  year={2014-07-14/2014-07-18},
  pages={52:1-52:10},
  address={Vienna, Austria}
}

@article{howe1996-proving-congruence-bisimulation,
  title={Proving Congruence of Bisimulation in Functional Programming Languages},
  author={Howe, Douglas J.},
  year={1996},
  journal={Inf. Comput.},
  volume={124},
  number={2},
  pages={103--112}
}

@inproceedings{hu2019-external-traced-monoidal,
  title={External Traced Monoidal Categories},
  author={Hu, Nick},
  year={2019},
  urldate={2025-04-05},
  abstract={String diagrams provide a novel technique for modern developments in category theory, and in particular, higher category theory. Many results about category theory can only be properly stated in the setting of 2-categories. We analyse the approach of using profunctors, which are a categorification of relations, to study category theory itself. Specifically, we examine the structure of {$\ast$}-autonomous categories and various other categories with duals, and develop a new characterisation of traced monoidal categories with respect to Prof: the 2-category of categories, profunctors, and natural transformations. We discuss at length the topic of diagrammatic methods, and advocate for a fancy kind of string diagram called an internal string diagram.},
  file={/home/cdo/Zotero/storage/JY8QQ8R3/Hu - 2019 - External traced monoidal categories.pdf}
}

@inproceedings{hu2021-formalizing-category-theory,
  title={Formalizing Category Theory in {{Agda}}},
  booktitle={Proceedings of the 10th {{ACM SIGPLAN International Conference}} on {{Certified Programs}} and {{Proofs}}},
  author={Hu, Jason Z. S. and Carette, Jacques},
  year={2021},
  month=jan,
  series={{{CPP}} 2021},
  pages={327--342},
  publisher={Association for Computing Machinery},
  address={New York, NY, USA},
  doi={10.1145/3437992.3439922},
  urldate={2025-04-05},
  abstract={The generality and pervasiveness of category theory in modern mathematics makes it a frequent and useful target of formalization. It is however quite challenging to formalize, for a variety of reasons. Agda currently (i.e. in 2020) does not have a standard, working formalization of category theory. We document our work on solving this dilemma. The formalization revealed a number of potential design choices, and we present, motivate and explain the ones we picked. In particular, we find that alternative definitions or alternative proofs from those found in standard textbooks can be advantageous, as well as "fit" Agda's type theory more smoothly. Some definitions regarded as equivalent in standard textbooks turn out to make different "universe level" assumptions, with some being more polymorphic than others. We also pay close attention to engineering issues so that the library integrates well with Agda's own standard library, as well as being compatible with as many of supported type theories in Agda as possible.},
  isbn={978-1-4503-8299-1},
  file={/home/cdo/Zotero/storage/9CUD628V/Hu and Carette - 2021 - Formalizing category theory in Agda.pdf}
}

@article{hu2021-traced-monoidal-categories,
  title={Traced {{Monoidal Categories}} as {{Algebraic Structures}} in {{Prof}}},
  author={Hu, Nick and Vicary, Jamie},
  year={2021},
  month=dec,
  journal={Electronic Proceedings in Theoretical Computer Science},
  volume={351},
  pages={84--97},
  issn={2075-2180},
  doi={10.4204/EPTCS.351.6},
  urldate={2025-04-05},
  abstract={We define a traced pseudomonoid as a pseudomonoid in a monoidal bicategory equipped with extra structure, giving a new characterisation of Cauchy complete traced monoidal categories as algebraic structures in Prof , the monoidal bicategory of profunctors. This enables reasoning about the trace using the graphical calculus for monoidal bicategories, which we illustrate in detail. We apply our techniques to study traced {$\ast$}-autonomous categories, proving a new equivalence result between the left {$\otimes$}-trace and the right `-trace, and describing a new condition under which traced {$\ast$}-autonomous categories become autonomous.},
  langid={english},
  file={/home/cdo/Zotero/storage/EQZJ3DK4/Hu and Vicary - 2021 - Traced Monoidal Categories as Algebraic Structures in Prof.pdf}
}

@article{hyland2000-full-abstraction-pcf,
  title={On Full Abstraction for {{PCF}}: {{I}}, {{II}}, and {{III}}},
  author={Hyland, J. M. E. and Ong, C.-H. Luke},
  year={2000},
  journal={Inf. Comput.},
  volume={163},
  number={2},
  pages={285--408}
}

@inproceedings{jeffrey2005-java-fully-abstract,
  title={Java Jr: {{Fully}} Abstract Trace Semantics for a Core Java Language},
  booktitle={14th {{European Symposium}} on {{Programming}}, {{ESOP}} 2005, {{Held}} as {{Part}} of the {{Joint European Conferences}} on {{Theory}} and {{Practice}} of {{Software}}, {{ETAPS}} 2005},
  author={Jeffrey, Alan and Rathke, Julian},
  year={2005-04-04/2005-04-08},
  pages={423--438},
  address={Edinburgh, UK}
}

@article{kelly1980-coherence-compact-closed,
  title={Coherence for compact closed categories},
  journal={Journal of pure and applied algebra},
  author={Kelly, Gregory M and Laplaza, Miguel L},
  volume={19},
  pages={193--213},
  year={1980},
  publisher={North-Holland}
}

@book{barr2006-autonomous-categories,
  title={*-Autonomous categories},
  author={Barr, Michael},
  volume={752},
  year={2006},
  publisher={Springer}
}

@article{shum1994-tortile-tensor-categories,
  title={Tortile tensor categories},
  author={Shum, Mei Chee},
  journal={Journal of Pure and Applied Algebra},
  volume={93},
  number={1},
  pages={57--110},
  year={1994},
  publisher={Elsevier}
}

@article{etingof2005-fusion-categories,
  title={On fusion categories},
  author={Etingof, Pavel and Nikshych, Dmitri and Ostrik, Viktor},
  journal={Annals of mathematics},
  pages={581--642},
  year={2005},
  publisher={JSTOR}
}

@article{shimizu2019-non-degeneracy-conditions-braided,
  title={Non-degeneracy conditions for braided finite tensor categories},
  author={Shimizu, Kenichi},
  journal={Advances in Mathematics},
  volume={355},
  pages={106778},
  year={2019},
  publisher={Elsevier}
}

@book{bohm2018-hopf-algebras-generalizations,
  title={Hopf algebras and their generalizations from a category theoretical point of view},
  author={B{\"o}hm, Gabriella},
  volume={2226},
  year={2018},
  publisher={Springer}
}
@article{day2004-quantum-categories-star,
  title={Quantum Categories, Star Autonomy, and Quantum},
  author={Day, Brian},
  journal={Galois theory, Hopf algebras, and semiabelian categories},
  volume={43},
  pages={187},
  year={2004},
  publisher={American Mathematical Soc.}
}

@article{matsuo2024-quantum-toroidal-algebras,
  title={Quantum toroidal algebras and solvable structures in gauge/string theory},
  author={Matsuo, Yutaka and Nawata, Satoshi and Noshita, Go and Zhu, Rui-Dong},
  journal={Physics Reports},
  volume={1055},
  pages={1--144},
  year={2024},
  publisher={Elsevier}
}

@inproceedings{bloom1989-equational-logic-iterative,
  title={The equational logic of iterative processes},
  author={Bloom, Stephen L},
  booktitle={International Conference on Fundamentals of Computation Theory},
  pages={47--57},
  year={1989},
  organization={Springer}
}

@article{ponto2014-traces-symmetric-monoidal,
  title={Traces in symmetric monoidal categories},
  author={Ponto, Kate and Shulman, Michael},
  journal={Expositiones Mathematicae},
  volume={32},
  number={3},
  pages={248--273},
  year={2014},
  publisher={Elsevier}
}

@inproceedings{bonchi2025-diagrammatic-algebra-program,
  title={A Diagrammatic Algebra for Program Logics},
  author={Bonchi, Filippo and Di Giorgio, Alessandro and Di Lavore, Elena},
  booktitle={International Conference on Foundations of Software Science and Computation Structures},
  pages={308--330},
  year={2025},
  organization={Springer}
}

@article{joyal1993-braided-tensor-categories,
  title={Braided Tensor Categories},
  author={Joyal, Andr{\'e} and Street, Ross},
  year={1993},
  journal={Advances in Mathematics},
  volume={102},
  number={1},
  pages={20--78},
  publisher={New York: Academic Press, 1965-},
  urldate={2025-04-05}
}

@article{reshetikhin1990-ribbon-graphs-invaraints,
  title={Ribbon graphs and their invaraints derived from quantum groups},
  author={Reshetikhin, Nicolai Yu and Turaev, Vladimir G},
  journal={Communications in Mathematical Physics},
  volume={127},
  pages={1--26},
  year={1990},
  publisher={Springer}
}

@article{joyal1991-geometry-tensor-calculus-2,
  title={The Geometry of Tensor Calculus, {{I}}},
  author={Joyal, Andr{\'e} and Street, Ross},
  year={1991},
  month=jul,
  journal={Advances in Mathematics},
  volume={88},
  number={1},
  pages={55--112},
  issn={0001-8708},
  doi={10.1016/0001-8708(91)90003-P},
  urldate={2025-04-05},
  file={/home/cdo/Zotero/storage/ATPL38LE/000187089190003P.html}
}

@article{abramsky2002-geometry-interaction-linear-2,
  title={Geometry of interaction and linear combinatory algebras},
  author={Abramsky, Samson and Haghverdi, Esfandiar and Scott, Philip},
  journal={Mathematical Structures in Computer Science},
  volume={12},
  number={5},
  pages={625--665},
  year={2002},
  publisher={Cambridge University Press}
}

@article{hajgato2013-traced-autonomous-categories,
  title={Traced *-autonomous categories are compact closed},
  author={Hajgat{\'o}, Tam{\'a}s and Hasegawa, Masahito},
  journal={Theory and Applications of Categories},
  volume={28},
  number={7},
  pages={206--212},
  year={2013}
}

@article{barrett1999-spherical-categories,
  title={Spherical categories},
  author={Barrett, John W and Westbury, Bruce W},
  journal={Advances in Mathematics},
  volume={143},
  number={2},
  pages={357--375},
  year={1999},
  publisher={Elsevier}
}`

@article{joyal1996-traced-monoidal-categories,
  title={Traced Monoidal Categories},
  author={Joyal, Andr{\'e} and Street, Ross and Verity, Dominic},
  year={1996},
  month=apr,
  journal={Mathematical Proceedings of the Cambridge Philosophical Society},
  volume={119},
  number={3},
  pages={447--468},
  issn={1469-8064, 0305-0041},
  doi={10.1017/S0305004100074338},
  urldate={2025-04-05},
  abstract={Traced monoidal categories are introduced, a structure theorem is proved for them, and an example is provided where the structure theorem has application.},
  langid={english}
}

@article{kinoshita2014-category-theoretic-structure,
  title={Category Theoretic Structure of Setoids},
  author={Kinoshita, Yoshiki and Power, John},
  year={2014},
  month=aug,
  journal={Theoretical Computer Science},
  series={Models of {{Interaction}}: {{Essays}} in {{Honour}} of {{Glynn Winskel}}},
  volume={546},
  pages={145--163},
  issn={0304-3975},
  doi={10.1016/j.tcs.2014.03.006},
  urldate={2025-04-05},
  abstract={A setoid is a set together with a constructive representation of an equivalence relation on it. Here, we give category theoretic support to the notion. We first define a category Setoid and prove it is Cartesian closed with coproducts. We then enrich it in the Cartesian closed category Equiv of sets and classical equivalence relations, extend the above results, and prove that Setoid as an Equiv-enriched category has a relaxed form of equalisers. We then recall the definition of E-category, generalising that of Equiv-enriched category, and show that Setoid as an E-category has a relaxed form of coequalisers. In doing all this, we carefully compare our category theoretic constructs with Agda code for type-theoretic constructs on setoids.},
  keywords={-category,-coinserter,-inserter,Cartesian closed category,Coproduct,Proof assistant,Proof irrelevance,Setoid},
  file={/home/cdo/Zotero/storage/HBA3G2L7/Kinoshita and Power - 2014 - Category theoretic structure of setoids.pdf;/home/cdo/Zotero/storage/NIZSM5XA/S0304397514001819.html}
}

@inproceedings{koutavas2011-applicative-environmental-bisimulation,
  title={From Applicative to Environmental Bisimulation},
  booktitle={Twenty-Seventh {{Conference}} on the {{Mathematical Foundations}} of {{Programming Semantics}}, {{MFPS}} 2011, {{Pittsburgh}}, {{PA}}, {{USA}}, {{May}} 25-28, 2011, Volume 276 of {{Electronic Notes}} in {{Theoretical Computer Science}}},
  author={Koutavas, Vasileios and Levy, Paul Blain and Sumii, Eijiro},
  editor={Mislove, Michael W. and Ouaknine, Jo{\"e}l},
  year={2011},
  pages={215--235},
  publisher={Elsevier}
}

@inproceedings{lafont1990-interaction-nets,
  title={Interaction Nets},
  booktitle={17th {{Annual ACM Symposium}} on {{Principles}} of {{Programming Languages}}, {{POPL}} 1990},
  author={Lafont, Yves},
  year={1990},
  month=jan,
  pages={95--108},
  address={San Francisco, California, USA}
}

@incollection{lafont1995-proof-nets-interaction,
  title={From Proof Nets to Interaction Nets},
  booktitle={London {{Mathematical Society Lecture Note Series}}},
  author={Lafont, Yves},
  year={1995},
  pages={225--248},
  publisher={Cambridge University Press}
}

@inproceedings{norell2009-dependently-typed-programming,
  title={Dependently typed programming in Agda},
  author={Norell, Ulf},
  booktitle={Proceedings of the 4th international workshop on Types in language design and implementation},
  pages={1--2},
  year={2009}
}

@inproceedings{ljungstrom2023-formalizing-cong-computing,
  title={Formalizing {$\Pi$}4({{S3}}) {$\cong$}{{Z}}/{{2Z}} and {{Computing}} a {{Brunerie Number}} in {{Cubical Agda}}},
  booktitle={2023 38th {{Annual ACM}}/{{IEEE Symposium}} on {{Logic}} in {{Computer Science}} ({{LICS}})},
  author={Ljungstr{\"o}m, Axel and M{\"o}rtberg, Anders},
  year={2023},
  month=jun,
  pages={1--13},
  doi={10.1109/LICS56636.2023.10175833},
  urldate={2025-04-05},
  abstract={Brunerie's 2016 PhD thesis contains the first synthetic proof in Homotopy Type Theory (HoTT) of the classical result that the fourth homotopy group of the 3-sphere is {$\mathbb{Z}$}/2{$\mathbb{Z}$}. The proof is one of the most impressive pieces of synthetic homotopy theory to date and uses a lot of advanced classical algebraic topology rephrased synthetically. Furthermore, the proof is fully constructive and the main result can be reduced to the question of whether a particular "Brunerie number" {$\beta$} can be normalized to {\textpm}2. The question of whether Brunerie's proof could be formalized in a proof assistant, either by computing this number or by formalizing the pen-and-paper proof, has since remained open. In this paper, we present a complete formalization in Cubical Agda. We do this by modifying Brunerie's proof so that a key technical result, whose proof Brunerie only sketched in his thesis, can be avoided. We also present a formalization of a new and much simpler proof that {$\beta$} is {\textpm}2. This formalization provides us with a sequence of simpler Brunerie numbers, one of which normalizes very quickly to -2 in Cubical Agda, resulting in a fully formalized computer-assisted proof that {\textbackslash}pi \_4({\textbackslash}mathbbS{\textasciicircum}3) {\textbackslash}cong {\textbackslash}mathbbZ/2{\textbackslash}mathbbZ.},
  keywords={Algebra,Codes,Computer science,Libraries,Machinery,Stress,Topology},
  file={/home/cdo/Zotero/storage/V2HJ78UT/10175833.html}
}

@inproceedings{mackie1995-geometry-interaction-machine,
  title={The {{Geometry}} of {{Interaction}} Machine},
  booktitle={{{POPL}} 1995},
  author={Mackie, Ian},
  year={1995},
  pages={198--208},
  publisher={ACM}
}

@inproceedings{mackie1998-linear-logic-boxes,
  title={Linear Logic {{With}} Boxes},
  booktitle={13th {{IEEE Symposium}} on {{Logic}} in {{Computer Science}}},
  author={Mackie, Ian},
  year={1998-06-21/1998-06-24},
  pages={309--320},
  address={Indianapolis, IN, USA}
}

@inproceedings{mellies2006-functorial-boxes-string,
  title={Functorial Boxes in String Diagrams},
  booktitle={20th {{International Workshop}} on {{Computer Science Logic}}, {{CSL}} 2006, 15th {{Annual Conference}} of the {{EACSL}}},
  author={Melli{\`e}s, Paul-Andr{\'e}},
  year={2006-09-25/2006-09-29},
  pages={1--30},
  address={Szeged, Hungary}
}

@inproceedings{milner2001-bigraphical-reactive-systems,
  title={Bigraphical Reactive Systems},
  booktitle={International {{Conference}} on {{Concurrency Theory}}},
  author={Milner, Robin},
  year={2001},
  pages={16--35},
  publisher={Springer}
}

@article{milner2006-pure-bigraphs-structure,
  title={Pure Bigraphs: {{Structure}} and Dynamics},
  shorttitle={Pure Bigraphs},
  author={Milner, Robin},
  year={2006},
  month=jan,
  journal={Information and Computation},
  volume={204},
  number={1},
  pages={60--122},
  issn={08905401},
  doi={10.1016/j.ic.2005.07.003},
  urldate={2025-04-01},
  copyright={https://www.elsevier.com/tdm/userlicense/1.0/},
  langid={english},
  file={/home/cdo/Zotero/storage/WE6MHR3H/Milner - 2006 - Pure bigraphs Structure and dynamics.pdf}
}

@inproceedings{mitsch2014-refactoring-refinement-reasoning,
  title={Refactoring, {{Refinement}}, and {{Reasoning}}: {{A Logical Characterization}} for {{Hybrid Systems}}},
  shorttitle={Refactoring, {{Refinement}}, and {{Reasoning}}},
  booktitle={{{FM}} 2014: {{Formal Methods}}},
  author={Mitsch, Stefan and Quesel, Jan-David and Platzer, Andr{\'e}},
  editor={Hutchison, David and Kanade, Takeo and Kittler, Josef and Kleinberg, Jon M. and Kobsa, Alfred and Mattern, Friedemann and Mitchell, John C. and Naor, Moni and Nierstrasz, Oscar and Pandu Rangan, C. and Steffen, Bernhard and Terzopoulos, Demetri and Tygar, Doug and Weikum, Gerhard and Jones, Cliff and Pihlajasaari, Pekka and Sun, Jun},
  year={2014},
  volume={8442},
  pages={481--496},
  publisher={Springer International Publishing},
  address={Cham},
  doi={10.1007/978-3-319-06410-9_33},
  urldate={2025-04-01},
  abstract={Refactoring of code is a common device in software engineering. As cyber-physical systems CPS become ever more complex, similar engineering practices become more common in CPS development. Proper safe developments of CPS designs are accompanied by a proof of correctness. Since the inherent complexities of CPS practically mandate iterative development, frequent changes of models are standard practice, but require reverification of the resulting models after every change.    To overcome this issue, we develop proof-aware refactorings for CPS. That is, we study model transformations on CPS and show how they correspond to relations on correctness proofs. As the main technical device, we show how the impact of model transformations on correctness can be characterized by different notions of refinement in differential dynamic logic. Furthermore, we demonstrate the application of refinements on a series of safety-preserving and liveness-preserving refactorings. For some of these we can give strong results by proving on a meta-level that they are correct. Where this is impossible, we construct proof obligations for showing that the refactoring respects the refinement relation.},
  isbn={978-3-319-06409-3 978-3-319-06410-9},
  langid={english}
}

@inproceedings{mogelberg2011-linearly-used-state-models,
  title={Linearly-Used State in Models of Call-by-Value},
  booktitle={4th {{International Conference}} on {{Algebra}} and {{Coalgebra}} in {{Computer Science}}, {{CALCO}} 2011},
  author={M{\o}gelberg, Rasmus Ejlers and Staton, Sam},
  year={2011-08-30/2011-09-02},
  pages={298--313},
  address={Winchester, UK}
}

@phdthesis{morrisjr1969-lambda-calculus-models-programming,
  title={Lambda-Calculus Models of Programming Languages},
  author={Morris Jr, James Hiram},
  year={1969},
  school={Massachusetts Institute of Technology}
}

@inproceedings{muroya2017-dynamic-geometry-interaction,
  title={The Dynamic Geometry of Interaction Machine: {{A}} Call-by-Need Graph Rewriter},
  booktitle={26th {{EACSL Annual Conference}} on {{Computer Science Logic}}, {{CSL}} 2017},
  author={Muroya, Koko and Ghica, Dan R.},
  year={2017-08-20/2017-08-24},
  pages={32:1-32:15},
  address={Stockholm, Sweden}
}

@inproceedings{muroya2018-geometry-computation-graph-abstraction,
  title={The Geometry of Computation-Graph Abstraction},
  booktitle={Proceedings of the 33rd {{Annual ACM}}/{{IEEE Symposium}} on {{Logic}} in {{Computer Science}}, {{LICS}} 2018},
  author={Muroya, Koko and Cheung, Steven W. T. and Ghica, Dan R.},
  year={2018-07-09/2018-07-12},
  pages={749--758},
  address={Oxford, UK}
}

@phdthesis{muroya2020-hypernet-semantics-programming,
  title={Hypernet {{Semantics}} of {{Programming Languages}}},
  author={Muroya, Koko},
  year={2020},
  school={University of Birmingham}
}

@inproceedings{muroya2016-memoryful-geometry-interaction,
  title={Memoryful Geometry of Interaction {{II}}: Recursion and Adequacy},
  booktitle={Proceedings of the 43rd {{Annual ACM SIGPLAN-SIGACT Symposium}} on {{Principles}} of {{Programming Languages}}, {{POPL}} 2016},
  author={Muroya, Koko and Hoshino, Naohiko and Hasuo, Ichiro},
  year={2016-01-20/2016-01-22},
  pages={748--760},
  address={St. Petersburg, FL, USA}
}

@inproceedings{muroya2024-preorder-constrained-simulations-program,
  title={Preorder-Constrained Simulations for Program Refinement with Effects},
  booktitle={{{CMCS}} 2024},
  author={Muroya, Koko and Sanada, Takahiro and Urabe, Natsuki},
  year={2024}
}

@inproceedings{muroya2024-term-evaluation-systems,
  title={Term Evaluation Systems with Refinements: {{First-order}}, Second-Order, and Contextual Improvement},
  booktitle={Functional and {{Logic Programming}} - 17th {{International Symposium}}, {{FLOPS}} 2024, {{Kumamoto}}, {{Japan}}, {{May}} 15-17, 2024, {{Proceedings}}, Volume 14659 of {{Lecture Notes}} in {{Computer Science}}},
  author={Muroya, Koko and Hamana, Makoto},
  editor={Gibbons, Jeremy and Miller, Dale},
  year={2024-05-15/2024-05-17},
  pages={31--61},
  publisher={Springer},
  address={Kumamoto, Japan}
}

@article{ohearn1999-logic-bunched-implications,
  title={The Logic of Bunched Implications},
  author={O'Hearn, Peter W and Pym, David J},
  year={1999},
  journal={Bulletin of Symbolic Logic},
  volume={5},
  number={2},
  pages={215--244}
}

@article{ong0000-game-semantics-applications,
  title={Game {{Semantics}} and Its {{Applications}}},
  author={Ong, Luke},
  journal={. Background},
  langid={english},
  file={/home/cdo/Zotero/storage/V4Z9IJ4B/Ong - Game Semantics and its Applications.pdf}
}

@article{pavlovic2013-monoidal-computer-basic,
  title={Monoidal Computer {{I}}: {{Basic}} Computability by String Diagrams},
  author={Pavlovic, Dusko},
  year={2013},
  journal={Information and Computation},
  volume={226},
  pages={94--116}
}

@inproceedings{pavlovic2012-tracing-man-middle,
  title={Tracing the {{Man}} in the {{Middle}} in {{Monoidal Categories}}},
  booktitle={Coalgebraic {{Methods}} in {{Computer Science}}},
  author={Pavlovic, Dusko},
  editor={Pattinson, Dirk and Schr{\"o}der, Lutz},
  year={2012},
  pages={191--217},
  publisher={Springer},
  address={Berlin, Heidelberg},
  doi={10.1007/978-3-642-32784-1_11},
  abstract={Man-in-the-Middle (MM) is not only a ubiquitous attack pattern in security, but also an important paradigm of network computation and economics. Recognizing ongoing MM-attacks is an important security task; modeling MM-interactions is an interesting task for semantics of computation. Traced monoidal categories are a natural framework for MM-modelling, as the trace structure provides a tool to hide what happens in the middle. An effective analysis of what has been traced out seems to require an additional property of traces, called normality. We describe a modest model of network computation, based on partially ordered multisets (pomsets), where basic network interactions arise from the monoidal trace structure, and a normal trace structure arises from an iterative, i.e. coalgebraic structure over terms and messages used in computation and communication. The correspondence is established using a convenient monadic description of normally traced monoidal categories.},
  isbn={978-3-642-32784-1},
  langid={english},
  keywords={Monoidal Category,Monoidal Structure,Output Interface,Parallel Composition,Security Protocol},
  file={/home/cdo/Zotero/storage/PBSHHKLV/Pavlovic - 2012 - Tracing the Man in the Middle in Monoidal Categories.pdf}
}

@article{pitts2016-nominal-techniques,
  title={Nominal Techniques},
  author={Pitts, Andrew},
  year={2016},
  month=feb,
  journal={ACM SIGLOG News},
  volume={3},
  number={1},
  pages={57--72},
  doi={10.1145/2893582.2893594},
  urldate={2025-04-01},
  abstract={Programming languages abound with features making use of names in various ways. There is a mathematical foundation for the semantics of such features which uses groups of permutations of names and the notion of the support of an object with respect to the action of such a group. The relevance of this kind of mathematics for the semantics of names is perhaps not immediately obvious. That it is relevant and useful has emerged over the last 15 years or so in a body of work that has acquired its own name: nominal techniques. At the same time, the application of these techniques has broadened from semantics to computation theory in general. This article introduces the subject and is based upon a tutorial at LICS-ICALP 2015 [Pitts 2015a].},
  file={/home/cdo/Zotero/storage/FC48574L/Pitts - 2016 - Nominal techniques.pdf}
}

@inproceedings{pitts2000-operational-semantics-program,
  title={Operational Semantics and Program Equivalence},
  booktitle={Applied {{Semantics}}, {{International Summer School}}, {{APPSEM}} 2000, {{Caminha}}, {{Portugal}}, {{September}} 9-15, 2000, {{Advanced Lectures}}, Volume 2395 of {{Lecture Notes}} in {{Computer Science}}},
  author={Pitts, Andrew M.},
  editor={Barthe, Gilles and Dybjer, Peter and Pinto, Lu{\'i}s and Saraiva, Jo{\~a}o},
  year={2000-09-09/2000-09-15},
  pages={378--412},
  publisher={Springer},
  address={Caminha, Portugal}
}

@article{plotkin2004-origins-structural-operational,
  title={The Origins of Structural Operational Semantics},
  author={Plotkin, Gordon D},
  year={2004},
  month=jul,
  journal={The Journal of Logic and Algebraic Programming},
  series={Structural {{Operational Semantics}}},
  volume={60--61},
  pages={3--15},
  issn={1567-8326},
  doi={10.1016/j.jlap.2004.03.009},
  urldate={2025-03-31},
  abstract={We review the origins of structural operational semantics. The main publication `A Structural Approach to Operational Semantics,' also known as the `Aarhus Notes,' appeared in 1981 [G.D. Plotkin, A structural approach to operational semantics, DAIMI FN-19, Computer Science Department, Aarhus University, 1981]. The development of the ideas dates back to the early 1970s, involving many people and building on previous work on programming languages and logic. The former included abstract syntax, the SECD machine, and the abstract interpreting machines of the Vienna school; the latter included the {$\lambda$}-calculus and formal systems. The initial development of structural operational semantics was for simple functional languages, more or less variations of the {$\lambda$}-calculus; after that the ideas were gradually extended to include languages with parallel features, such as Milner's CCS. This experience set the ground for a more systematic exposition, the subject of an invited course of lectures at Aarhus University; some of these appeared in print as the 1981 Notes. We discuss the content of these lectures and some related considerations such as `small state' versus `grand state,' structural versus compositional semantics, the influence of the Scott--Strachey approach to denotational semantics, the treatment of recursion and jumps, and static semantics. We next discuss relations with other work and some immediate further development. We conclude with an account of an old, previously unpublished, idea: an alternative, perhaps more readable, graphical presentation of systems of rules for operational semantics.},
  keywords={-calculus,(Labelled) transition systems,(Structural) operational semantics,Abstract machines,Big step semantics,Concurrency,Semantics of programming languages,Small-step semantics,Static semantics,Structural induction},
  file={/home/cdo/Zotero/storage/DX48DYAA/S1567832604000268.html}
}

@article{plotkin2008-tensors-comodels-models,
  title={Tensors of Comodels and Models for Operational Semantics},
  author={Plotkin, Gordon D. and Power, John},
  year={2008},
  journal={Electr. Notes Theor. Comput. Sci.},
  volume={218},
  pages={295--311}
}

@article{pretnar2015-introduction-algebraic-effects,
  title={An Introduction to Algebraic Effects and Handlers. Invited Tutorial Paper},
  author={Pretnar, Matija},
  year={2015},
  journal={Elect. Notes in Theor. Comp. Sci.},
  volume={319},
  pages={19--35}
}

@article{rathke2010-deriving-structural-labelled,
  title={Deriving Structural Labelled Transitions for Mobile Ambients},
  author={Rathke, Julian and Soboci{\'n}ski, Pawel},
  year={2010},
  month=oct,
  journal={Information and Computation},
  volume={208},
  number={10},
  pages={1221--1242},
  issn={08905401},
  doi={10.1016/j.ic.2010.06.001},
  urldate={2025-04-01},
  copyright={https://www.elsevier.com/tdm/userlicense/1.0/},
  langid={english},
  file={/home/cdo/Zotero/storage/ET9KWSS2/Rathke and Sobociński - 2010 - Deriving structural labelled transitions for mobile ambients.pdf}
}

@article{reshetikhin1990-ribbon-graphs-invaraints-2,
  title={Ribbon Graphs and Their Invaraints Derived from Quantum Groups},
  author={Reshetikhin, N. Y. and Turaev, V. G.},
  year={1990},
  month=jan,
  journal={Communications in Mathematical Physics},
  volume={127},
  number={1},
  pages={1--26},
  issn={1432-0916},
  doi={10.1007/BF02096491},
  urldate={2025-04-05},
  abstract={The generalization of Jones polynomial of links to the case of graphs inR3 is presented. It is constructed as the functor from the category of graphs to the category of representations of the quantum groups.},
  langid={english},
  keywords={Complex System,Neural Network,Nonlinear Dynamics,Quantum Computing,Statistical Physic}
}

@inproceedings{reynolds2002-separation-logic-shared,
  title={Separation Logic: {{A}} Logic for Shared Mutable Data Structures},
  booktitle={17th {{Annual IEEE Symposium}} on {{Logic}} in {{Computer Science}}},
  author={Reynolds, John C},
  year={2002},
  pages={55--74},
  publisher={IEEE}
}

@inproceedings{sands1995-total-correctness-local,
  title={Total Correctness by Local Improvement in Program Transformation},
  booktitle={Conference {{Record}} of {{POPL}}'95: 22nd {{ACMSIGPLAN-SIGACT Symposium}} on {{Principles}} of {{Programming Languages}}},
  author={Sands, David},
  editor={Cytron, Ron K. and Lee, Peter},
  year={1995-01-23/1995-01-25},
  pages={221--232},
  publisher={ACM Press},
  address={San Francisco, California, USA}
}

@inproceedings{sangiorgi2007-environmental-bisimulations-higher-order,
  title={Environmental Bisimulations for Higher-Order Languages},
  booktitle={{{LICS}} 2007},
  author={Sangiorgi, Davide and Kobayashi, Naoki and Sumii, Eijiro},
  year={2007},
  pages={293--302},
  publisher={IEEE Computer Society}
}

@article{sassone2005-congruence-petri-nets,
  title={A {{Congruence}} for {{Petri Nets}}},
  author={Sassone, Vladimiro and Soboci{\'n}ski, Pawe{\l}},
  year={2005},
  month=mar,
  journal={Electronic Notes in Theoretical Computer Science},
  volume={127},
  number={2},
  pages={107--120},
  issn={15710661},
  doi={10.1016/j.entcs.2005.02.008},
  urldate={2025-04-01},
  copyright={https://www.elsevier.com/tdm/userlicense/1.0/},
  langid={english}
}

@inproceedings{simpson2000-complete-axioms-categorical,
  title={Complete axioms for categorical fixed-point operators},
  author={Simpson, Alex and Plotkin, Gordon},
  booktitle={Proceedings Fifteenth Annual IEEE Symposium on Logic in Computer Science (Cat. No. 99CB36332)},
  pages={30--41},
  year={2000},
  organization={IEEE}
}

@inproceedings{simpson2018-behavioural-equivalence-modalities,
  title={Behavioural Equivalence via Modalities for Algebraic Effects},
  booktitle={Programming {{Languages}} and {{Systems}} - 27th {{European Symposium}} on {{Programming}}, {{ESOP}} 2018, {{Held}} as {{Part}} of the {{European Joint Conferences}} on {{Theory}} and {{Practice}} of {{Software}}, {{ETAPS}} 2018, {{Thessaloniki}}, {{Greece}}, {{April}} 14-20, 2018, {{Proceedings}}, Volume 10801 of {{Lecture Notes}} in {{Computer Science}}},
  author={Simpson, Alex and Voorneveld, Niels F. W.},
  editor={Ahmed, Amal},
  year={2018-04-14/2018-04-20},
  pages={300--326},
  publisher={Springer},
  address={Thessaloniki, Greece}
}

@article{simpson2004-sequent-calculi-process,
  title={Sequent Calculi for Process Verification: {{Hennessy}}--{{Milner}} Logic for an Arbitrary {{GSOS}}},
  shorttitle={Sequent Calculi for Process Verification},
  author={Simpson, Alex},
  year={2004},
  month=jul,
  journal={The Journal of Logic and Algebraic Programming},
  volume={60--61},
  pages={287--322},
  issn={15678326},
  doi={10.1016/j.jlap.2004.03.004},
  urldate={2025-04-01},
  langid={english},
  file={/home/cdo/Zotero/storage/Q4MP9RE5/Simpson - 2004 - Sequent calculi for process verification Hennessy–Milner logic for an arbitrary GSOS.pdf}
}

@inproceedings{sinot2005-call-by-name-call-by-value-token-passing,
  title={Call-by-Name and Call-by-Value as Token-Passing Interaction Nets},
  booktitle={7th {{International Conference}} on {{Typed Lambda Calculi}} and {{Applications}}, {{TLCA}} 2005},
  author={Sinot, Fran{\c c}ois-R{\'e}gis},
  year={2005-04-21/2005-04-23},
  pages={386--400},
  address={Nara, Japan}
}

@article{sinot2006-call-by-need-token-passing-nets,
  title={Call-by-Need in Token-Passing Nets},
  author={Sinot, Fran{\c c}ois-R{\'e}gis},
  year={2006},
  journal={Mathematical Structures in Computer Science},
  volume={16},
  number={4},
  pages={639--666}
}

@article{spivak2017-string-diagrams-traced,
  title={String Diagrams for Traced and Compact Categories Are Oriented 1-Cobordisms},
  author={Spivak, David I. and Schultz, Patrick and Rupel, Dylan},
  year={2017},
  journal={Journal of Pure and Applied Algebra},
  volume={221},
  number={8},
  pages={2064--2110},
  publisher={Elsevier},
  urldate={2025-04-05},
  file={/home/cdo/Zotero/storage/BV3NCIBK/Spivak et al. - 2017 - String diagrams for traced and compact categories are oriented 1-cobordisms.pdf}
}

@article{statman1985-logical-relations-typed,
  title={Logical Relations and the Typed Lambda-Calculus},
  author={Statman, Richard},
  year={1985},
  journal={Information and Control},
  volume={65},
  number={2/3},
  pages={85--97}
}

@incollection{steingartner2017-categorical-semantics-programming,
  title={Categorical Semantics of Programming Languages},
  booktitle={Selected {{Topics}} in {{Contemporary Mathematical Modeling}}},
  author={Steingartner, William and Novitzk{\'a}, Valerie},
  year={2017},
  pages={167--192},
  publisher={Publishing Office of Czestochowa University of Technology},
  doi={10.17512/STiCMM2017.11},
  urldate={2025-03-31},
  abstract={Computer science uses still more formal models to aid the understanding of complex software systems and to reason about their behavior, in particular to verify the correctness of a system or at least some desired aspects of its behavior with respect to a formal specification. All these techniques are grounded in formal models of system execution which are themselves rooted in the formal semantics of the underlying programming languages. Denotational semantics expresses the meaning of programs by functions from syntactical domains to semantic domains which can be non-trivial mathematical structures. We present in this document representation of denotational semanitcs based on category theory. We consider memory states as objects of category and semantic functions as morphisms. Category is then a model and semantics of a program written in our language Jane is modeled in this category as a path, i.e. a composition of morphisms.},
  isbn={978-83-7193-668-5},
  langid={english},
  file={/home/cdo/Zotero/storage/K6UXDI96/Steingartner and Novitzká - 2017 - Categorical semantics of programming languages.pdf}
}

@article{vezzosi2021-cubical-agda-dependently,
  title={Cubical {{Agda}}: {{A}} Dependently Typed Programming Language with Univalence and Higher Inductive Types},
  shorttitle={Cubical {{Agda}}},
  author={Vezzosi, Andrea and M{\"o}rtberg, Anders and Abel, Andreas},
  year={2021},
  month=jan,
  journal={Journal of Functional Programming},
  volume={31},
  pages={e8},
  issn={0956-7968, 1469-7653},
  doi={10.1017/S0956796821000034},
  urldate={2025-04-05},
  abstract={Proof assistants based on dependent type theory provide expressive languages for both programming and proving within the same system. However, all of the major implementations lack powerful extensionality principles for reasoning about equality, such as function and propositional extensionality. These principles are typically added axiomatically which disrupts the constructive properties of these systems. Cubical type theory provides a solution by giving computational meaning to Homotopy Type Theory and Univalent Foundations, in particular to the univalence axiom and higher inductive types (HITs). This paper describes an extension of the dependently typed functional programming language Agda with cubical primitives, making it into a full-blown proof assistant with native support for univalence and a general schema of HITs. These new primitives allow the direct definition of function and propositional extensionality as well as quotient types, all with computational content. Additionally, thanks also to copatterns, bisimilarity is equivalent to equality for coinductive types. The adoption of cubical type theory extends Agda with support for a wide range of extensionality principles, without sacrificing type checking and constructivity.},
  langid={english},
  file={/home/cdo/Zotero/storage/DKA9T9XF/Vezzosi et al. - 2021 - Cubical Agda A dependently typed programming language with univalence and higher inductive types.pdf}
}

@article{wadler1998-marriage-effects-monads,
  title={The Marriage of Effects and Monads},
  author={Wadler, Philip},
  year={1998},
  journal={ACM SIGPLAN Notices},
  volume={34:1},
  pages={63--74}
}

@inproceedings{wood2022-framework-substructural-type,
  title={A Framework for Substructural Type Systems},
  booktitle={European {{Symposium}} on {{Programming}}},
  author={Wood, James and Atkey, Robert},
  year={2022},
  pages={376--402},
  publisher={Springer International Publishing Cham},
  urldate={2025-04-06},
  file={/home/cdo/Zotero/storage/WZJNKPIG/Wood and Atkey - 2022 - A framework for substructural type systems.pdf}
}

@article{yin2009-exploiting-refactoring-formal,
  title={Exploiting Refactoring in Formal Verification},
  author={Yin, Xiang and Knight, John and Weimer, Westley},
  year={2009},
  month=jun,
  journal={2009 IEEE/IFIP International Conference on Dependable Systems \& Networks},
  pages={53--62},
  publisher={IEEE},
  address={Lisbon, Portugal},
  doi={10.1109/DSN.2009.5270355},
  urldate={2025-04-01},
  abstract={In previous work, we introduced Echo, a new approach to the formal verification of the functional correctness of software. Part of what makes Echo practical is a technique called verification refactoring. The program to be verified is mechanically refactored specifically to facilitate verification. After refactoring, the program is documented with low-level annotations, and a specification is extracted mechanically. Proofs that the semantics of the refactored program are equivalent to those of the original program, that the code conforms to the annotations, and that the extracted specification implies the program's original specification constitute the verification argument. In this paper, we discuss verification refactoring and illustrate it with a case study of the verification of an optimized implementation of the Advanced Encryption Standard (AES) against its official specification. We compare the practicality of verification using refactoring with traditional correctness proofs and refinement, and we assess its efficacy using seeded defects.},
  isbn={9781424444229}
}

@inproceedings{yin2009-exploiting-refactoring-formal-2,
  title={Exploiting Refactoring in Formal Verification},
  booktitle={2009 {{IEEE}}/{{IFIP International Conference}} on {{Dependable Systems}} \& {{Networks}}},
  author={Yin, Xiang and Knight, John and Weimer, Westley},
  year={2009},
  month=jun,
  pages={53--62},
  issn={2158-3927},
  doi={10.1109/DSN.2009.5270355},
  urldate={2025-04-01},
  abstract={In previous work, we introduced Echo, a new approach to the formal verification of the functional correctness of software. Part of what makes Echo practical is a technique called verification refactoring. The program to be verified is mechanically refactored specifically to facilitate verification. After refactoring, the program is documented with low-level annotations, and a specification is extracted mechanically. Proofs that the semantics of the refactored program are equivalent to those of the original program, that the code conforms to the annotations, and that the extracted specification implies the program's original specification constitute the verification argument. In this paper, we discuss verification refactoring and illustrate it with a case study of the verification of an optimized implementation of the advanced encryption standard (AES) against its official specification. We compare the practicality of verification using refactoring with traditional correctness proofs and refinement, and we assess its efficacy using seeded defects.},
  keywords={Application software,Computer science,Concrete,Cryptography,Formal verification,Humans,Programming,Software systems,Software tools,Timing},
  file={/home/cdo/Zotero/storage/5J7P9UX7/5270355.html}
}

@inproceedings{martin-lof1975-intuitionistic-predicative,
  author={Per Martin-L{\"o}f},
  title={An Intuitionistic Theory of Types: Predicative Part},
  booktitle={Logic Colloquium '73},
  editor={H. E. Rose and J. C. Shepherdson},
  series={Studies in Logic and the Foundations of Mathematics},
  volume={80},
  pages={73--118},
  publisher={North-Holland},
  year={1975}
}

@inproceedings{martin-lof1982-constructive,
  author={Per Martin-L{\"o}f},
  title={Constructive Mathematics and Computer Programming},
  booktitle={Logic, Methodology and Philosophy of Science VI},
  editor={L. J. Cohen and J. Los and H. Pfeiffer and K. P. Podewski},
  pages={153--175},
  publisher={North-Holland},
  year={1982}
}

@book{martin-lof1984-mltt,
  author={Per Martin-L{\"o}f},
  title={Intuitionistic Type Theory},
  note={Lecture notes by Giovanni Sambin from a course held in Padua, 1980},
  publisher={Bibliopolis},
  address={Naples},
  year={1984}
}

@incollection{howard1980-curry-howard,
  author={William A. Howard},
  title={The Formulae-as-Types Notion of Construction},
  booktitle={To H. B. Curry: Essays on Combinatory Logic, Lambda Calculus and Formalism},
  editor={J. P. Seldin and J. R. Hindley},
  pages={479--490},
  publisher={Academic Press},
  year={1980}
}

@book{curry-feys1958-combinatory,
  author={Haskell B. Curry and Robert Feys},
  title={Combinatory Logic, Volume I},
  series={Studies in Logic and the Foundations of Mathematics},
  publisher={North-Holland},
  address={Amsterdam},
  year={1958}
}

@book{heyting1956-intuitionism,
  author={Arend Heyting},
  title={Intuitionism: An Introduction},
  publisher={North-Holland},
  address={Amsterdam},
  year={1956}
}

@article{kolmogorov1932-interpretation,
  author={A. N. Kolmogorov},
  title={Zur Deutung der intuitionistischen Logik},
  journal={Mathematische Zeitschrift},
  volume={35},
  pages={58--65},
  year={1932}
}

@book{nordstrom-petersson-smith1990-mltt,
  author={Bengt Nordstr{\"o}m and Kent Petersson and Jan M. Smith},
  title={Programming in Martin-L{\"o}f's Type Theory: An Introduction},
  publisher={Oxford University Press},
  year={1990}
}

@incollection{dybjer1991-inductive-sets,
  author={Peter Dybjer},
  title={Inductive Sets and Families in Martin-L{\"o}f's Type Theory and their Set-Theoretic Semantics},
  booktitle={Logical Frameworks},
  editor={Gerard Huet and Gordon Plotkin},
  pages={280--306},
  publisher={Cambridge University Press},
  year={1991}
}

@article{feferman1964-predicative,
  author={Solomon Feferman},
  title={Systems of Predicative Analysis},
  journal={Journal of Symbolic Logic},
  volume={29},
  number={1},
  pages={1--30},
  year={1964}
}

@article{rathjen1999-strength-mltt,
  author={Michael Rathjen},
  title={The Strength of Martin-L{\"o}f Type Theory with a Superuniverse. Part I},
  journal={Archive for Mathematical Logic},
  volume={39},
  number={1},
  pages={1--39},
  year={1999}
}

@book{hott2013-book,
  author={The Univalent Foundations Program},
  title={Homotopy Type Theory: Univalent Foundations of Mathematics},
  publisher={Institute for Advanced Study},
  address={Princeton},
  year={2013},
  url={https://homotopytypetheory.org/book/},
  note={Available online}
}

@misc{team2021-coq-proof-assistant,
  author={The Coq Development Team},
  title={The Coq Proof Assistant},
  howpublished={Version 8.13},
  year={2021},
  url={https://coq.inria.fr/}
}

@inproceedings{hofmann-streicher1998-groupoid-type-theory,
  title={The Groupoid Interpretation of Type Theory},
  booktitle={Twenty-Five Years of Constructive Type Theory},
  author={Hofmann, Martin and Streicher, Thomas},
  editor={Giovanni Sambin and Jan M. Smith},
  year={1998},
  pages={83--111},
  publisher={Oxford University Press}
}

@article{awodey-warren2009-homotopy-models,
  title={Homotopy Theoretic Models of Identity Types},
  author={Awodey, Steve and Warren, Michael A.},
  year={2009},
  journal={Mathematical Proceedings of the Cambridge Philosophical Society},
  volume={146},
  number={1},
  pages={45--55}
}

@article{lumsdaine2010-inf-categories-type-theory,
  title={Weak $\omega$-Categories from Intensional Type Theory},
  author={Lumsdaine, Peter LeFanu},
  year={2010},
  journal={Logical Methods in Computer Science},
  volume={6},
  number={3},
  pages={1--19}
}

@article{kapulkin2012-simplicial-model-univalent,
  title={The Simplicial Model of Univalent Foundations (after Voevodsky)},
  author={Kapulkin, Chris and Lumsdaine, Peter LeFanu},
  year={2012},
  journal={arXiv preprint arXiv:1211.2851}
}

@article{brunerie2016-homotopy-spheres,
  title={On the Homotopy Groups of Spheres in Homotopy Type Theory},
  author={Brunerie, Guillaume},
  year={2016},
  journal={PhD thesis, Université de Nice Sophia Antipolis}
}

@article{brouwer1912-intuitionism,
  author={Brouwer, L. E. J.},
  title={Intuitionism and Formalism},
  journal={Bulletin of the American Mathematical Society},
  volume={20},
  number={2},
  pages={81--96},
  year={1912},
  doi={10.1090/S0002-9904-1912-02126-6},
  url={https://doi.org/10.1090/S0002-9904-1912-02126-6}
}

@article{russell1902-paradox,
  title={Letter to Gottlob Frege, June 16, 1902},
  author={Russell, Bertrand},
  journal={From Frege to G{\"o}del: A Source Book in Mathematical Logic},
  year={1902}
}

@article{joyal1981-finite-species,
  title={A combinatorial theory of formal series},
  author={Joyal, Andr{\'e} and YORGEY, BRENT A},
  journal={Adv. in Math},
  volume={42},
  pages={1--82},
  year={1981}
}

@article{cameron2013-species-combinatorics,
  title={Enumerative Combinatorics 8: Species},
  author={Cameron, Peter J},
  year={2013}
}

@book{bergeron1997-species-book,
  title={Combinatorial species and tree-like structures},
  author={Bergeron, Fran{\c{c}}ois and Labelle, Gilbert and Leroux, Pierre},
  number={67},
  year={1998},
  publisher={Cambridge University Press}
}

@article{troyka2018-split-graph,
  title={Split graphs: combinatorial species and asymptotics},
  author={Troyka, Justin M},
  journal={arXiv preprint arXiv:1803.07248},
  year={2018}
}

@article{hardt2013-species-graph-enumeration,
  title={Combinatorial species and graph enumeration},
  author={Hardt, Andy and McNeely, Pete and Phan, Tung and Troyka, Justin M},
  journal={arXiv preprint arXiv:1312.0542},
  year={2013}
}

@book{maclane1998-categories-book,
  title={Categories for the Working Mathematician},
  author={Mac Lane, Saunders},
  year={1998},
  edition={2nd},
  publisher={Springer},
  series={Graduate Texts in Mathematics},
  volume={5}
}

@book{awodey2010-category-theory-book,
  title={Category Theory},
  author={Awodey, Steve},
  year={2010},
  edition={2nd},
  publisher={Oxford University Press}
}

@book{goldblatt2014-topoi,
  title={Topoi: the categorial analysis of logic},
  author={Goldblatt, Robert},
  volume={98},
  year={2014},
  publisher={Elsevier}
}

@book{leinster2014-basic-category-theory,
  title={Basic Category Theory},
  author={Leinster, Tom},
  year={2014},
  publisher={Cambridge University Press},
  series={Cambridge Studies in Advanced Mathematics},
  volume={143}
}

@article{egbert1998-coherence-theorem,
  title={Coherence Theorems for Categories},
  author={Mac Lane, Saunders},
  journal={Annals of Mathematics},
  year={1963},
  volume={78},
  pages={365--385}
}

@article{barrett1999-spherical,
  title={Spherical categories},
  author={Barrett, John W and Westbury, Bruce W},
  journal={Advances in Mathematics},
  volume={143},
  number={2},
  pages={357--375},
  year={1999},
  publisher={Elsevier}
}

@article{maltsiniotis2010-grothendieck-inf-groupoids,
  title={Grothendieck $$\backslash$infty $-groupoids, and still another definition of $$\backslash$infty $-categories},
  author={Maltsiniotis, Georges},
  journal={arXiv preprint arXiv:1009.2331},
  year={2010}
}

@misc{cubical-agda-lib,
  title={{Cubical Agda: A standard library for Cubical Agda}},
  howpublished={\url{https://github.com/agda/cubical}},
  note={Version 0.9, compatible with Agda 2.8.0},
  year={2025},
  key={CubicalAgdaLib}
}

@misc{1lab,
  author = {Amélia Liao and contributors},
  title = {1Lab: An online reference for Homotopy Type Theory and Cubical Methods},
  howpublished = {\url{https://1lab.dev}},
  year = {2025},
  note = {Accessed September 2025}
}

@misc{agda-categories,
  title={{agda-categories: A Categories library for Agda}},
  author={Hu, Jason Z.S. and Carette, Jacques and contributors},
  howpublished={\url{https://github.com/agda/agda-categories}},
  year={2025},
  note={Accessed September 2025}
}

@inproceedings{mathlib2020,
  author    = {The mathlib Community},
  title     = {The Lean mathematical library},
  booktitle = {Proceedings of the 9th ACM SIGPLAN International Conference on Certified Programs and Proofs (CPP 2020)},
  year      = {2020},
  doi       = {10.1145/3372885.3373824},
  url       = {https://arxiv.org/abs/1910.09336}
}

@book{nipkow2002-isabelle,
  author    = {Tobias Nipkow and Lawrence C. Paulson and Markus Wenzel},
  title     = {Isabelle/HOL --- A Proof Assistant for Higher-Order Logic},
  series    = {Lecture Notes in Computer Science},
  volume    = {2283},
  publisher = {Springer},
  year      = {2002},
  isbn      = {3-540-43376-7},
  url       = {https://doi.org/10.1007/3-540-45949-9}
}

@unpublished{williams2025-vsets,
  title     = {Virtual Sets},
  author    = {Mark Williams},
  note      = {Preprint},
  month     = {March},
  year      = {2025},
  url       = {}
}

@book{chacon2014-git,
  title={Pro Git},
  author={Chacon, Scott and Straub, Ben},
  year={2014},
  publisher={Apress},
  url={https://git-scm.com/book/en/v2}
}

@misc{odonnell2025-virtual-sets,
  author = {Christina O'Donnell},
  title = {Virtual Sets},
  year = {2025},
  howpublished = {\url{https://github.com/cdo256/virtualsets}},
  note = {Accessed: Sept 21st, 2025}
}

@misc{odonnell2025-just-agda,
  author = {Christina O'Donnell},
  title = {Just Agda},
  year = {2025},
  howpublished = {\url{https://github.com/cdo256/just-agda}},
  note = {Accessed: Sept 21st, 2025}
}

@misc{nix-flakes,
  title = {Nix Flakes},
  author = {Dolstra, Eelco and NixOS contributors},
  year = {2019},
  howpublished = {\url{https://github.com/NixOS/nix}},
  note = {Accessed: September 21, 2025}
}

@misc{agda-stdlib,
  title = {Agda Standard Library},
  author = {Danielsson, Nils Anders and Daggitt, Matthew and Allais, Guillaume and Abel, Andreas and contributors},
  year = {2014},
  howpublished = {\url{https://github.com/agda/agda-stdlib}},
  note = {Accessed: September 21, 2025}
}

@misc{altenkirch2017-setoid-hell,
  author = {Altenkirch, Thorsten},
  title = {From setoid hell to homotopy heaven?},
  howpublished = {Talk slides},
  year = {2017},
  note = {Functional Programming Laboratory, School of Computer Science, University of Nottingham},
  url = {https://people.cs.nott.ac.uk/psztxa/talks/types-17-hell.pdf}
}

@article{allais2025-frex,
  author = {Allais, Guillaume and Brady, Edwin and Corbyn, Nathan and Kammar, Ohad and Yallop, Jeremy},
  title = {Frex: dependently-typed algebraic simplification},
  journal = {Proceedings of the ACM on Programming Languages},
  year = {2025},
  volume = {9},
  number = {ICFP},
  pages = {1--29},
  doi = {10.48550/arXiv.2306.15375},
  url = {https://arxiv.org/abs/2306.15375}
}

@article{huber2017-cubical-canonicity,
  author    = {Simon Huber},
  title     = {Canonicity for Cubical Type Theory},
  journal   = {Journal of Automated Reasoning},
  year      = {2017},
  note      = {Section added on propositional truncation; also see arXiv:1607.04156},
  doi       = {10.48550/arXiv.1607.04156},
  url       = {https://arxiv.org/abs/1607.04156}
}

@inproceedings{doorn2016-hit-truncation,
  author    = {Floris van Doorn},
  title     = {Constructing the propositional truncation using non-recursive HITs},
  booktitle = {Proceedings of the 1st International Conference on Homotopy Type Theory and Univalent Foundations},
  year      = {2016},
  note      = {See also: doi:10.1145/2854065.2854076},
  doi       = {10.1145/2854065.2854076},
  url       = {https://dl.acm.org/doi/10.1145/2854065.2854076}
}

